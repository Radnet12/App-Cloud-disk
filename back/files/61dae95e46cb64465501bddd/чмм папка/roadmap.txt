Front-end
1. Next.js (SSR, SSG) 
2. Redux Toolkit
3. Apollo + GraphQL (как альтернатива REST)
4. Observers. 
	4.1 IntersectionObserver
	4.2 ResizeObserver
	4.3 MutationObserver
5. Оптимизация реакт приложений (React.memo, useMemo, useCallback) + нужно знать как заменяются все жизненные циклы в функц. компонентах


Back-end
1. Node.js (файловая система маст хев, плюс интересная тема про 
2. Express.js (повтори классы)
3. Nest.js (только после TypeScript и повторения классов)
4. MongoDB.
	* Совет: Установи бд себе на пк и поиграйся с ней в консоли программы. (у ulbitv есть видео).
		 Потом разверни простой сервер на express и установи пакет mongodb. Теперь ты можешь пилить проекты на MongoDB, но это ещё не всё.
		 Вместо пакета mongodb, можно использовать ORM Mongoose. Теперь ты можешь работать с mongo в стиле ООП.

	4.1 Язык запросов
	4.2 ORM Mongoose

5. Язык запросов SQL
6. PosgreSQL. 
	* Тот же принцим, что и с MongoDB. (у ulbitv есть видео). Тут в качестве ORM используй Sequelize

7. Попробуй написать полную авторизацию на node.js, где есть как access, так и refresh токены. 
	* У ulbi есть два видео про то как сделать наиболее правильную jwt авторизацию
	7.1 JWT Авторизация на MongoDB + Express
	7.2 JWT Авторизация на PostgreSQL + Nest (тут авторизация по круче будет, так как присутствуют роли пользователей)

8. Firebase. (хуй знает нужен он тебе или нет)
	8.1 Авторизация. Тут есть прикол, она полностью пишется на клиенте))
	8.2 Firebase functions
	8.3 Можешь попробовать FCM (с помощью этой штуки иожно слать уведомления в браузере или в шторке на телефоне).
	
9. Docker
10. Деплой react-приложений. Netlify, Vercel и тд.

Other
1. TypeScript
	1.1 TypeScript для React (Типизация компонентов, запросов, redux библиотеки @types/...)
	1.2 Продвинутый TypeScript (напр. Декораторы, Утилиты)


Темы по js, которые нужно повторить
1. Классы. (контекст, наследование, геттеры, сеттеры, ключевые слова(static, private, readonly, public
	1.1 Работа с контекстов в классах и функциях. 
	1.2 Наследование. Особенности работы с super().
	1.3 Аксессоры. Геттеры и Сеттеры.
	1.4 Семантика классов. Static, public, private, readonly.

2. Полезно будет повторить методы глобальных классов Object, Array, Number
	* Это нужно знать идеально, ибо некоторые их методы очень полезны на практике и меня спрашивали на собеседовании про них.






	